{"version":3,"sources":["components/GameCards/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","components/Instructions/index.js","App.js","index.js"],"names":["GameCards","props","className","onClick","clickTracker","id","alt","name","src","image","Wrapper","children","Title","Score","userTopScore","userScore","Instructions","type","data-toggle","data-target","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","App","state","gameImages","clicked","clickedCurrent","includes","setState","alert","push","scoreNew","newTopScore","gameImagesNew","sort","Math","random","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"8yBAmBeA,MAhBf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,aACf,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YAEb,yBAAKC,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,KAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,Y,MCAvEC,MANf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCS1BC,MAVf,SAAeX,GACb,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,aACnB,wBAAIA,UAAU,SAASD,EAAMU,a,aCehBE,MAnBf,SAAeZ,GAEX,OACI,6BACI,yBAAKI,GAAG,uBACJ,0CAAmB,wBAAIH,UAAU,aAAd,IAA4BD,EAAMa,eAGzD,yBAAKT,GAAG,oBACJ,sCADJ,IACoB,wBAAIH,UAAU,aAAd,IAA4BD,EAAMc,c,MCwBnDC,MAjCf,WACE,OACA,yBAAKd,UAAU,gBAGjB,4BAAQe,KAAK,SAASf,UAAU,kBAAkBgB,cAAY,QAAQC,cAAY,iBAAlF,SACO,6BADP,mBAIA,yBAAKjB,UAAU,aAAaG,GAAG,eAAee,SAAS,KAAKC,KAAK,SAASC,kBAAgB,oBAAoBC,cAAY,QACxH,yBAAKrB,UAAU,eAAemB,KAAK,YACjC,yBAAKnB,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcG,GAAG,qBAA/B,gBACA,4BAAQY,KAAK,SAASf,UAAU,QAAQsB,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAKrB,UAAU,cAAf,oDAEE,qLAEF,yBAAKA,UAAU,sBC+DNwB,E,2MA9EbC,MAAQ,CACNC,aACAb,UAAW,EACXD,aAAc,EACde,QAAS,I,EAIXzB,aAAe,SAAAC,GAIb,IAAIyB,EAAiB,EAAKH,MAAME,QAChC,GAAI,EAAKF,MAAME,QAAQE,SAAS1B,GAG9B,EAAK2B,SAAS,CACZjB,UAAW,EACXc,QAAS,KAGXI,MAAM,8CAIH,CACHH,EAAeI,KAAK7B,GAEpB,IAAI8B,EAAW,EAAKR,MAAMZ,UAAY,EAClCqB,EAAcD,EAAW,EAAKR,MAAMb,aAAeqB,EAAW,EAAKR,MAAMb,aAEzEuB,EAAgB,EAAKV,MAAMC,WAAWU,KAAK,kBAAMC,KAAKC,SAAW,KAGrE,EAAKR,SAAS,CACZJ,WAAYS,EACZtB,UAAWoB,EACXrB,aAAcsB,EACdP,QAASC,IAIiB,KAAvB,EAAKH,MAAMZ,YACZkB,MAAM,kCAEN,EAAKD,SAAS,CACZjB,UAAW,EACXc,QAAS,Q,wEAOT,IAAD,OAGP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,yBACA,kBAAC,EAAD,CAAOd,UAAW0B,KAAKd,MAAMZ,UAC3BD,aAAc2B,KAAKd,MAAMb,eAE3B,kBAAC,EAAD,MACC2B,KAAKd,MAAMC,WAAWc,IAAI,SAAAd,GAAU,OACnC,kBAAC,EAAD,CACExB,aAAc,EAAKA,aACnBC,GAAIuB,EAAWvB,GACfsC,IAAKf,EAAWvB,GAChBI,MAAOmB,EAAWnB,e,GAvEZmC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.29c49a5f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction GameCards(props) {\r\n  return (\r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-3\">\r\n      \r\n        <img onClick={() => props.clickTracker(props.id)} alt={props.name} src={props.image} />\r\n      </div>\r\n\r\n\r\n\r\n      </div>\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default GameCards;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}\r\n  \r\n  </div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return( \r\n    <div className=\"row\">\r\n      <div className=\"col-lg-12\">\r\n  <h1 className=\"title\">{props.children}</h1>\r\n  </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Score(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"userTopScoreDisplay\">\r\n                <h3>Top Score:</h3><h3 className=\"scoreFont\"> {props.userTopScore}</h3>\r\n            </div>\r\n\r\n            <div id=\"userScoreDisplay\">\r\n                <h3>Score:</h3> <h3 className=\"scoreFont\"> {props.userScore}</h3>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Score;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Instructions() {\r\n  return (\r\n  <div className=\"instructions\">\r\n  {/* <img alt=\"throneHere\" id=\"throne\" src=\"/images/throne.png\"></img> */}\r\n  \r\n<button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n How to<br></br> Win The Throne\r\n</button>\r\n\r\n<div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div className=\"modal-dialog\" role=\"document\">\r\n    <div className=\"modal-content\">\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Instructions</h5>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        When you play the game of thrones, you win or die\r\n        <p>Don't loose your head playing this Game of Thrones themed click game! Simply click on an image of the characters without clicking the same one twice!</p>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Instructions;\r\n","import React, { Component } from \"react\";\r\nimport GameCards from \"./components/GameCards\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport gameImages from \"./gameImages.json\";\r\nimport Score from \"./components/Score\";\r\nimport Instructions from \"./components/Instructions\";\r\n\r\nclass App extends Component {\r\n  \r\n  state = {\r\n    gameImages,\r\n    userScore: 0,\r\n    userTopScore: 0,\r\n    clicked: []\r\n\r\n  };\r\n\r\n  clickTracker = id => {\r\n    // you need to know if the image was clicked before\r\n    // if was not clicked then score ++ shufle // verify the topscore to see if is the bigest\r\n    // if clicked then you lost and restart\r\n    let clickedCurrent = this.state.clicked\r\n    if (this.state.clicked.includes(id)) {\r\n      //lost\r\n      //userScore needs to reset back to 0\r\n      this.setState({\r\n        userScore: 0,\r\n        clicked: []\r\n      });\r\n      // alert user that that image has already been clicked\r\n      alert(\"That image has been clicked! Try again\");\r\n      //clear array\r\n\r\n    }\r\n    else {\r\n      clickedCurrent.push(id);\r\n      // update socre \r\n      let scoreNew = this.state.userScore + 1\r\n      let newTopScore = scoreNew > this.state.userTopScore ? scoreNew : this.state.userTopScore\r\n\r\n      let gameImagesNew = this.state.gameImages.sort(() => Math.random() - 0.5)\r\n\r\n\r\n      this.setState({\r\n        gameImages: gameImagesNew,\r\n        userScore: scoreNew,\r\n        userTopScore: newTopScore,\r\n        clicked: clickedCurrent\r\n      });\r\n      // logic handle click  ES6\r\n\r\n        if(this.state.userScore===11){\r\n          alert(\"Congratulations, you have won!\");\r\n          \r\n          this.setState({\r\n            userScore: 0,\r\n            clicked: []\r\n          })\r\n        }\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    // call the components\r\n    return (\r\n      <Wrapper>\r\n        <Title>Game  of  Clicks</Title>\r\n        <Score userScore={this.state.userScore}\r\n          userTopScore={this.state.userTopScore}\r\n        />\r\n        <Instructions></Instructions>\r\n        {this.state.gameImages.map(gameImages => (\r\n          <GameCards\r\n            clickTracker={this.clickTracker}\r\n            id={gameImages.id}\r\n            key={gameImages.id}\r\n            image={gameImages.image}\r\n\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}